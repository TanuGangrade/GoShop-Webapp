constant
reducer
add reducer to store
action:
 dispatch the action
  reducer

dispatch means run

->the combineReducers has an object of functions. these functions run whenever dispatch is called and the return value becomes the apps new state
  we use store to access the state
  we access the state using getState()


payload is the data we pass in from the form

->USE EFFECT:
  If you want to run an effect and clean it up only once (on mount and unmount), you can pass an empty array ([]) 
  as a second argument. This tells React that your effect doesn’t depend on any values from props or state, so it
  never needs to re-run. This isn’t handled as a special case — it follows directly from how the dependencies array 
  always works.
  While passing [] as the second argument is closer to the familiar componentDidMount

->Props
    .MATCH
    // match is from (URL)
    A match object contains information about how a <Route path> matched the URL. match objects contain the following properties:
    params - (object) Key/value pairs parsed from the URL corresponding to the dynamic segments of the path
    isExact - (boolean) true if the entire URL was matched (no trailing characters)
    path - (string) The path pattern used to match. Useful for building nested <Route>s
    url - (string) The matched portion of the URL. Useful for building nested <Link>s


    .HISTORY
    https://reactrouter.com/web/api/history
    push(path, [state]) - (function) Pushes a new entry onto the history stack

    .LOCATION
    shows whatevers after the history
    https://stackoverflow.com/questions/44121069/how-to-pass-params-with-history-push-link-redirect-in-react-router-v4



->Making a params in url optional
  "/cart/:id?"
  the ? makes it optional

->getState: get all the reducers(in store.js)

->we useDispatch(action) and useSelector to get anything form the redux state

->Multer for file upload

->need to make forlder static so it gets loaded in the browser



